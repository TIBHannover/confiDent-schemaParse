=CiteSchema=
{{ '{{' }}CiteSchema
|name=DataCite
|type=XSD
|storemode=property
{{ '}}' }}


=properties=
{% for element in elements_dict %}
{# Note the user of curly brance with literal curlibrace is the way Jinja escapes its metacharacter #}
{{ '{{' }}SchemaProperty
|id=DataCite::{{ elements_dict[ element ]['name']|lower }}
|name={{ elements_dict[ element ]['name']|title }}
|kind={{ elements_dict[ element ]['kind'] }}
|type=XSD:{{ elements_dict[ element ]['type'] }}
|cardinality={{ elements_dict[ element ]['cardinality'] }}
|definition={{ elements_dict[ element ]['definition'] }}
|schema=DataCite
|storemode=subobject
{{ '}}' }}
{% endfor %}
{# USE THIS

# TODO:
* properties: query single and not
    ie.  <xs:element name="creator" maxOccurs="unbounded">
        and not <xs:element name="creators">
* cardinality:
* mapsTo

* allowedValue (for later)
* example (for later)

{{SchemaProperty
|id=DataCite::identifier
|name=Identifier
|kind=Property  ---> infer kind form nesting levet :////
|type=XSD:complexType --> tag name
|parent=     --> ???? (save for later)
|cardinality=1   ->> 1  .. needs clarification
      minOccurs="0" maxOccurs="unbounded"

|mapsTo=ConfIDentSchema/EventId
    TODO: schema mapping through YAML file.
    TODO: Phillip will do a dictionary mapping

|definition=A persistent identifier that identifies a resource.
            Documentation
|allowedValue=DOI (Digital Object Identifier) registered by a DataCite member. Format should be “10.1234/foo”
    keep empty for now
|examples=10.1234/foo
    keep empty for now
|schema=DataCite
|storemode=subobject
    Forms templates related (keep as is)
}}
#}